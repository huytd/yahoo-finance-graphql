type RegularMarketDayRange {
  low: Float
  high: Float
}

type FiftyTwoWeekRange {
  low: Float
  high: Float
}

# A simplified version of Quote data
type Quote {
  language: String
  region: String
  quoteType: String
  quoteSourceName: String
  triggerable: Boolean
  currency: String
  tradeable: Boolean
  regularMarketPreviousClose: Float
  ask: Float
  bidSize: Int
  askSize: Int
  fullExchangeName: String
  financialCurrency: String
  regularMarketOpen: Float
  averageDailyVolume3Month: Int
  averageDailyVolume10Day: Int
  fiftyTwoWeekLowChange: Float
  fiftyTwoWeekLowChangePercent: Float
  fiftyTwoWeekHighChange: Float
  fiftyTwoWeekHighChangePercent: Float
  fiftyTwoWeekLow: Float
  fiftyTwoWeekHigh: Float
  earningsTimestamp: String
  earningsTimestampStart: String
  earningsTimestampEnd: String
  trailingPE: Float
  epsTrailingTwelveMonths: Float
  epsForward: Float
  epsCurrentYear: Float
  priceEpsCurrentYear: Float
  sharesOutstanding: Float
  bookValue: Float
  fiftyDayAverage: Float
  fiftyDayAverageChange: Float
  fiftyDayAverageChangePercent: Float
  twoHundredDayAverage: Float
  twoHundredDayAverageChange: Float
  twoHundredDayAverageChangePercent: Float
  marketCap: Float
  forwardPE: Float
  priceToBook: Float
  sourceInterval: Int
  exchangeDataDelayedBy: Int
  averageAnalystRating: String
  firstTradeDateMilliseconds: String
  priceHint: Int
  postMarketChangePercent: Float
  postMarketTime: String
  postMarketPrice: Float
  postMarketChange: Float
  regularMarketChange: Float
  regularMarketChangePercent: Float
  regularMarketTime: String
  regularMarketPrice: Float
  regularMarketDayHigh: Float
  regularMarketDayLow: Float
  regularMarketVolume: Int
  bid: Float
  marketState: String
  exchange: String
  shortName: String
  longName: String
  messageBoardId: String
  exchangeTimezoneName: String
  exchangeTimezoneShortName: String
  gmtOffSetMilliseconds: Int
  market: String
  esgPopulated: Boolean
  displayName: String
  symbol: String
  regularMarketDayRange: RegularMarketDayRange
  fiftyTwoWeekRange: FiftyTwoWeekRange
}

# A return type for autocomplete data
type AutoCompelete {
  symbol: String
  name: String
  exch: String
  type: String
  exchDisp: String
  typeDisp: String
}

type Historical {
  date: String
  open: Float
  high: Float
  low: Float
  close: Float
  adjClose: Float
  volume: Float
}

type TrendingSymbol {
  symbol: String
  quote: Quote
}

type Query {
  # Get the simplified quote for a symbol
  quote(symbol: String): Quote
  # Autocomplete the stock symbol as the user type
  autoComplete(query: String): [AutoCompelete]
  # Return the list of historical data for a symbol
  historicalData(symbol: String, from: String, to: String, interval: String): [Historical]
  # List trending symbols
  trendingSymbols(count: Int, withQuote: Boolean): [TrendingSymbol]
}
